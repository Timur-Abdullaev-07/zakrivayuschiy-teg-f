/* Здесь вы напишете основную часть стилей страницы.

Будьте внимательны! Для корректной работы скриптов на этом сайте нужно, чтобы в HTML некоторые классы были названы особым образом:
✦ theme-dark — класс тёмной темы
✦ theme-light — класс светлой темы
✦ like-icon — для svg-иконки анимированного сердца
✦ card__like-button — для кнопки Like рядом с иконкой
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ card__icon-button — для кнопки, оборачивающей иконку
✦ is-liked — для обозначения состояния лайкнутой иконки в виде сердца
✦ button__text — для обозначения текстового элемента внутри кнопки

Кроме этого, не меняйте HTML переключателя тем. Его разметка также гарантирует работу своего скрипта.

*/

.page {
  min-inline-size: 320px;
  min-block-size: 100dvb;
  background-color: var(--mainColor);
  background-image: var(--backgroundImage);
  background-size: cover;
  font-family: var(--mainFont);
  color: var(--mainColor);
  font-variation-settings: 'wght' var(--fontWeightRegular);
}

.header {
  inline-size: min(700px, 100%);
  margin: 100px auto;
  border: 2px solid var(--mainColor);
  padding-block-start: clamp(120px, 19%, 136px);
  padding-block-end: 25px;
  display: flex;
  flex-direction: column;
  align-items: center;
  background-color: var(--backgroundColor);
  font-family: var(--accentFont);
  text-transform: uppercase;
  line-height: 1;
}

.header__title {
  padding-block-end: 22px;
  font-size: clamp(3.0625rem, 2.7104rem + 1.5023vw, 4.0625rem);
}

.header__text {
  font-size: clamp(0.875rem, 0.6769rem + 0.8451vw, 1.4375rem);
  padding-block-end: 23px;
}

.header__theme-menu{
  padding-inline-start: 18px;
}

.theme-menu__list {
  display: flex;
  flex-direction: column;
  gap: 9px;
}

.theme-menu__button {
  position: relative;
  border: none;
  font-family: var(--accentFont);
  font-size: 14px;
  line-height: 1;
  text-transform: uppercase;
  transition: ease opacity 0.3s;
}

.theme-menu__button:disabled {
  opacity: 0.6;
  pointer-events: none;
}

.theme-menu__button::after {
  content: '';
  display: block;
  height: 2px;
  width: 100%;
  transform: scaleX(0);
  background-color: var(--mainColor);
  transition: ease transform 0.3s;
  transform-origin: top left;
}

.theme-menu__button:disabled::before {
  content: '▶';
  position: absolute;
  inset-inline-start: -14px;
  animation: animationDisabled 0.5s infinite alternate-reverse ease-in-out;
}

@keyframes animationDisabled {
  from {
    inset-inline-start: -14px;
  }
  to {
    inset-inline-start: -10px;
  }
}

.card {
  inline-size: min(700px, 100%);
  margin: 0 auto;
  margin-bottom: 50px;
  border: 2px solid var(--mainColor);
  background-color: var(--backgroundColor);
  font-size: 18px;
}

.card__title {
  font-size: 18px;
  font-variation-settings: 'wght' var(--fontWeightBold);
  padding: 4px 10px;
}

.card__image-box {
  position: relative;
}

.card__image-text {
  position: absolute;
  inset-block-start: 25px;
  inset-inline-end: 25px;
  font-family: var(--accentFont);
  font-size: 14px;
  text-shadow: 
  -1px 0 var(--backgroundColor),
  0 1px var(--backgroundColor),
  1px 0 var(--backgroundColor),
  0 -1px var(--backgroundColor);
}

@supports((text-stroke: 1px var(--backgroundColor)) or (-webkit-text-stroke: 1px var(--backgroundColor))) {
  .card__image-text {
    -webkit-text-stroke: 1px var(--backgroundColor);
    text-stroke: 1px var(--backgroundColor);
    text-shadow: none;
  }
} 

.card__image {
  width: 100%;
  aspect-ratio: 1 / 1;
  object-position: center;
  object-fit: cover;
  border: 2px solid var(--mainColor);
}

.card__image_filter-grey {
  filter: grayscale(100%);
}

.card__image_filter-saturate {
  filter: saturate(158%);
}


.card__image_filter-hue-rotate {
  filter: hue-rotate(-180deg);
}

.card__image_filter-sepia {
  filter: sepia(80%);;
}

.card__image_filter-invert {
  filter: invert(0.7);
}

.card__image_filter-contrast {
  filter: contrast(20%);
}

.card__image_filter-all {
  filter: invert(0.1) brightness(90%) saturate(60%) hue-rotate(90deg);
}

.card__text {
  padding-inline: 25px;
  padding-block-start: 25px;
}

.card__button-box {
  display: flex;
  justify-content: flex-end;
  gap: 10px;
  padding-block: 25px;
  padding-inline-end: 25px;
}

.card__icon-button {
  border: none;
  padding: 0;
}

.like-icon {
  width: 39px;
  height: 36px;
}

.heart {
  transform-origin: center;
}

.contour {
  color: var(--mainColor);
  transition: ease color 0.1s;
  transition-delay: 60ms;
}

.like-icon.is-liked .contour {
  color: var(--heartColor);
  transition: ease color 0.3s;
}

.main-body {
  color: transparent;
  transition: ease color 0.3s;
}

@media (hover: hover) {
  .heart:hover > .main-body {
    color: var(--mainColor);
    transition: ease color 0.3s;
    transition-delay: 30ms;
  }
}

.heart:active > .main-body {
  color: var(--heartColor);
  transition: ease color 0.3s;
  transition-delay: 30ms;
}

.like-icon.is-liked .main-body {
  color: var(--heartColor);
  transition: ease color 0.3s;
  transition-delay: 30ms;
}

.core {
  color: transparent;
  transition: ease color 0.3s;
  transition-delay: 30ms;
}

@media (hover: hover) {
  .heart:hover > .core {
    color: var(--mainColor);
    transition: ease color 0.3s;
  }
}

.heart:active > .core {
  color: var(--heartColor);
  transition: ease color 0.3s;
}

.like-icon.is-liked .core {
  color: var(--heartColor);
  transition: ease color 0.3s;
}

.sparks {
  opacity: 0;
}

.like-icon.is-liked .heart {
  animation: heartBit 0.3s 0.1s 2 alternate-reverse ease-in;
}

@keyframes heartBit {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(1.5);
  }
}

.like-icon.is-liked .sparks {
  animation: sparks 0.3s 0.3s 1 alternate-reverse ease-in;
}

@keyframes sparks {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.button {
  position: relative;
  border: 2px solid var(--mainColor);
  background-color: var(--backgroundColor);
  font-family: var(--accentFont);
  font-size: 14px;
  transition: ease box-shadow 0.3s;
}

.button::before {
  content: '';
  position: absolute;
  inset: 0;
  width: 100%;
  height: 100%;
  background-color: var(--mainColor);
  transition: ease-in-out transform 0.5s;
  transform: scale(0, 1);
  transform-origin: center left;
}

.button__text {
  position: relative;
  color: var(--buttonTextColor);
  z-index: 99;
  mix-blend-mode: difference;
}

.card__like-button {
  min-width: 130px;
  font-size: 14px;
  padding-block: 10px;
}

footer {
  padding-block-end: 100px;
  margin: 0 auto;
  width: fit-content;
}

.footer__button {
  display: flex;
  align-items: center;
  gap: 8px;
  padding: 15px 20px;
}

.footer__button-icon {
  width: 21px;
  height: 21px;
  color: var(--buttonTextColor);
  mix-blend-mode: difference;
}

.dialog {
  width: clamp(341px, 25%, 353px);
  background-color: var(--backgroundColor);
  border: 2px solid var(--mainColor);
  padding: 30px;
  font-family: var(--accentFont);
  font-size: 14px;
  color: var(--mainColor);
}

.dialog::backdrop {
  background-color: rgb(0 0 0 / 0.3);
  backdrop-filter: brightness(25%);
} 

.dialog__content {
  display: grid;
  grid-template-columns: 39px 1fr;
  gap: 20px;
  margin-block-end: 30px;
}

.dialog__icon {
  align-self: center;
  width: 39px;
  height: 39px;
}

.dialog__text {
  font-size: 14px;
  line-height: 150%;
}

.dialog__button {
  width: 100%;
  height: 38px;
}

@media (width < 376px) {
  .footer__button {
    flex-direction: column;
  }
  
  .footer__button-icon {
    width: 28px;
    height: 28px;
  }

  .dialog {
    padding-inline: 40px;
  }
}

@media (hover: hover) {
  .theme-menu__button:focus-visible {
    opacity: 0.6;
  }

  .theme-menu__button:focus-visible::after {
    transform: scaleX(1);
  }

  .theme-menu__button:hover {
    opacity: 0.6;
  }

  .card__icon-button:focus-visible {
    outline: 2px solid var(--mainColor);
  }

  .button:focus-visible {
    box-shadow: 2px 2px var(--mainColor);
  }

  .button:hover::before {
    transform: scale(1, 1);
  }
}